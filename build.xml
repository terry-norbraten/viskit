<?xml version="1.0" encoding="UTF-8"?>

<!-- Seems to render in Mozilla Firefox the best.  Broken in IE7 -->
<?xml-stylesheet type="text/xsl" href="./ant2html.xsl"?>

<project basedir="." default="build.run.no.extensions" name="Viskit">
    <description>
        Ant build file for the NPS Viskit Discrete Event Simulation (DES) UI and
        associated libraries. Third-party jar files are not compiled from source
        here, but they are copied as necessary for the Viskit distribution.
    </description>

    <import file="nbproject/ide-file-targets.xml"/>

    <!-- External properties file.  This contains properties that vary from developer       -->
    <!-- to developer.  Also, any properties in this file will override the properties set  -->
    <!-- in this build.xml file, so, be careful.                                            -->
    <property file="build.properties"/>

    <!-- magic properties, do not change or delete -->

    <property name="build.compiler" value="modern"/>

    <!-- ID properties (this file) -->
    <property name="SVNId" value="$Id$"/>

    <!-- Project directories -->

    <property description="Where the distribution files wind up." location="dist" name="dir.dist"/>

    <property description="Where all the JAXB 2.2 extensions are." location="${dir.lib}/jaxb" name="dir.lib.xml"/>

    <property description="Runtime module extension libraries." location="${dir.lib}/ext" name="dir.lib.ext"/>

    <property description="Root of the javadoc tree for Viskit." location="doc/api" name="dir.api.doc"/>

    <property description="Generated JAXB bindings for Event Graphs" location="${dir.bindings}/eventgraph" name="dir.src.simevg"/>

    <property description="Generated JAXB bindings for Assemblies" location="${dir.bindings}/assembly" name="dir.src.simasm"/>

    <property description="Generated JAXB bindings for CLI config" location="${dir.bindings}/cli" name="dir.src.cli"/>

    <property description="Generated JAXB bindings for SGE qstat config" location="${dir.bindings}/sge/qstat" name="dir.src.sge.qstat"/>

    <property description="OA3302 Course Examples Directory" location="MyViskitProjects/DefaultProject" name="examples.lib" />

    <property description="DISKIT directory" location="../DISKIT" name="dir.diskit"/>

    <property description="Assembly utility" location="${dir.src}/viskit/xsd/assembly" name="dir.src.simasm.util"/>

    <property description="CLI utility" location="${dir.src}/viskit/xsd/cli" name="dir.src.cli.util"/>

    <property description="Event Graph utilities" location="${dir.src}/viskit/xsd/sge" name="dir.src.sge.util"/>

    <property description="Simevg utility" location="${dir.src}/viskit/xsd/translator" name="dir.src.simevg.util"/>

    <property description="where the help source sits" location="${dir.src}/viskit/javahelp" name="javahelp"/>

    <property description="where the generated and copied help files go" location="${dir.build.classes}/viskit/javahelp" name="build.javahelp"/>

    <!-- access to local environment variables -->
    <property environment="env"/>

    <path id="jaxb.compile.path">
        <fileset dir="${dir.lib.xml}" includes="jaxb-xjc.jar jaxb-core.jar"/>
    </path>

    <path id="jaxb.runtime.path">
        <fileset dir="${dir.lib.xml}" includes="**/*.jar" excludes="jaxb-xjc.jar" id="jaxb.classes"/>
    </path>

    <path id="runtime.extension.classes.path">
        <fileset dir="${dir.lib.ext}" includes="**/*.jar"/>
    </path>

    <path id="compile.classpath">
        <pathelement location="${dir.lib}/bsh-2.0b4.jar"/>
        <pathelement location="${dir.lib}/jdom.jar"/>
        <pathelement location="${dir.lib}/jgraph.jar"/>
        <pathelement location="${dir.lib}/actions.jar"/>
        <pathelement location="${dir.lib}/simkit.jar"/>
        <pathelement location="${dir.lib}/jhall.jar"/>
        <pathelement location="${jfreechart.jar}"/>
        <pathelement location="${dir.lib}/commons-configuration-1.7.jar"/>
        <pathelement location="${dir.lib}/commons-codec-1.3.jar"/>
        <pathelement location="${dir.lib}/commons-lang-2.6.jar"/>
        <pathelement location="${log4j.jar}"/>
        <pathelement location="${dir.lib}/xmlrpc-2.0.jar"/>
    </path>

    <path id="runtime.classpath">
        <pathelement location="${dir.build.classes}"/>
        <pathelement location="${dir.lib}/batik-ext.jar"/>
        <pathelement location="${jcommon.jar}"/>
        <pathelement location="${dir.lib}/commons-beanutils-1.8.3.jar"/>
        <pathelement location="${dir.lib}/commons-collections-3.2.1.jar"/>
        <pathelement location="${dir.lib}/commons-digester-2.1.jar"/>
        <pathelement location="${dir.lib}/commons-jxpath-1.3.jar"/>
        <pathelement location="${dir.lib}/commons-logging-1.1.1.jar"/>
        <pathelement location="${dir.lib}/resolver.jar"/>
        <pathelement location="${dir.lib}/serializer.jar"/>
        <pathelement location="${dir.lib}/xalan.jar"/>
        <pathelement location="${dir.lib}/xercesImpl.jar"/>
        <path refid="compile.classpath"/>
        <path refid="jaxb.runtime.path"/>
        <path refid="runtime.extension.classes.path"/>
    </path>

    <path id="runtime.test.classpath">
        <path refid="runtime.classpath"/>
        <pathelement location="${dir.lib}/support/junit.jar"/>
    </path>

    <!-- For the launch4j installers -->
    <fileset file="${dist.exe.jar}" id="runtime.viskit.exe"/>

    <!-- The following filesets are used for the IzPack installer routine -->
    <fileset dir="${dir.lib}" id="runtime.lib" >
        <!-- could use restrictions in current runtime.classpath -->
        <include name="**/*.jar"/>
        <exclude name="izpack/**"/>
        <exclude name="support/**"/>
        <exclude name="jaxb/jaxb-xjc.jar"/>
    </fileset>
    <fileset dir="${dir.lib.ext}" id="runtime.lib.ext" >
        <include name="**/*.jar"/>
    </fileset>

    <!-- TaskDefs -->
    <taskdef classname="com.sun.tools.xjc.XJCTask"
             name="xjc"
             classpathref="jaxb.compile.path"/>

    <!-- @deprecated legacy task (no longer used) -->
    <taskdef classname="net.amadan.trang.ant.TrangTask" name="trang">
        <classpath>
            <fileset dir="${dir.lib}/support" includes="trang*.jar"/>
        </classpath>
    </taskdef>

    <!--  === TARGET: all === -->
    <target name="all" description="clean then build everything" depends="dist" />

    <!--  === TARGET: help === -->
    <target name="help"
            depends="javahelp"
            description="Display Viskit build infomation and launch the JavaHelp set">
        <echo>
This is the Ant build file for the NPS Viskit and associated libraries.
Third-party jar files are not compiled from source here, but they are
copied as necessary for the viskit distribution.  This buildfile was
created and tested using ${ant.version}.
Type "ant -p" on the command line for a list of targets to invoke and
their descpritions.
        </echo>
        <java classpath="${dir.lib}/hsviewer.jar:${dir.lib}/jhall.jar"
              classname="sunw.demo.jhdemo.JHLauncher"
              fork="true">
            <arg line="-helpset ${build.javahelp}/vHelpSet.hs"/>
        </java>
    </target>

    <target name="platformInitialize" depends="platformType"/>
    <target name="platformType">
        <condition property="isWindows" >
            <os family="windows"/>
        </condition>
        <condition property="isMac" >
            <os family="mac"/>
        </condition>
        <!-- Based on Apache Ant user-manual example -->
        <condition property="isUnixNotMac">
            <and>
                <os family="unix"/>

                <not>
                    <equals arg1="${os.name}" arg2="Mac OS X"/>
                </not>

            </and>
        </condition>
    </target>

    <target name="check.JAVA_HOME" unless="env.JAVA_HOME" if="isWindows">
        <echo message="warning:  JAVA_HOME not set!"/>
    </target>
    <target name="check.ANT_HOME" unless="env.ANT_HOME" if="isWindows">
        <echo message="warning:  ANT_HOME not set!"/>
    </target>

    <!--  === TARGET: init === -->
    <target name="init"
            depends="platformInitialize,check.JAVA_HOME,check.ANT_HOME"
            description="Preparatory actions required for all targets">
        <tstamp/>
        <echo message="Build started on ${DSTAMP} at ${TSTAMP}"/>
        <echo message="Buildfile version ${SVNId}"/>
        <echo message="Base directory: ${basedir}"/>
        <echo message="Source directory: ${dir.src}"/>
        <echo message="Build directory: ${dir.build}"/>
        <echo message="JAVA_HOME: ${java.home}"/>
    </target>

    <!--  === TARGET: build.init === -->
    <target  name="build.init"
             depends="init"
             description="Preparatory actions for compilation and documentation targets">
        <mkdir dir="${dir.build}"/>
        <mkdir dir="${dir.build.lib}"/>
        <mkdir dir="${dir.build.classes}"/>
        <mkdir dir="${dir.src.simevg}"/>
        <mkdir dir="${dir.src.simasm}"/>
        <mkdir dir="${dir.src.simasm}/stats"/>
        <mkdir dir="${dir.src.cli}"/>
        <mkdir dir="${dir.lib.ext}"/>
    </target>

    <!-- @deprecated - Now a legacy target as we are no longer building schema from DTD -->
    <target name="build.schema"
            depends="build.init"
            description="Create xsd Schemas from dtd @deprecated">
        <trang failonerror="true" input="${simkit.dtd}" output="${simkit.xsd}" schemaIn="dtd" schemaOut="xsd"/>
        <trang failonerror="true" input="${assembly.dtd}" output="${assembly.xsd}" schemaIn="dtd" schemaOut="xsd"/>

	<!-- useful for autogenerating stats schema and adding type validator -->
        <!--trang failonerror="true" input="${statistics.dtd}" output="${statistics.xsd}" schemaIn="dtd" schemaOut="xsd"/-->

	<!-- Requires GNU Patch on the %PATH% -->
	<!--patch patchfile="${statistics.xsd.patch}" originalfile="${statistics.xsd}"/-->
        <trang failonerror="true" input="${cli.dtd}" output="${cli.xsd}" schemaIn="dtd" schemaOut="xsd"/>
    </target>

    <target name="bindings.simkit"
            depends="build.init"
            description="Create bindings to Simkit XML Schemas" >

        <xjc extension="true"
             package="viskit.xsd.bindings.eventgraph"
             schema="${simkit.xsd}"
             destdir="${dir.src}">
            <produces dir="${dir.src.simevg}"/>
        </xjc>
        <xjc extension="true"
             package="viskit.xsd.bindings.assembly"
             schema="${assembly.xsd}"
             destdir="${dir.src}">
            <produces dir="${dir.src.simasm}"/>
        </xjc>
        <xjc extension="true"
             package="viskit.xsd.bindings.assembly.stats"
             schema="${statistics.xsd}"
             destdir="${dir.src}">
            <produces dir="${dir.src.simasm}/stats"/>
        </xjc>
        <xjc extension="true"
             package="viskit.xsd.bindings.cli"
             schema="${cli.xsd}"
             destdir="${dir.src}">
            <produces dir="${dir.src.cli}"/>
        </xjc>
        <!--xjc extension="true"
                package="viskit.xsd.bindings.sge.qstat"
                schema="${qstat.xsd}"
                destdir="${dir.src}">
            <produces dir="${dir.src.sge.qstat}"/>
        </xjc-->
    </target>

    <!--  === TARGET: compile === -->
    <target name="compile" depends="bindings.simkit,javahelp">
        <javac destdir="${dir.build.classes}"
               source="${javac.source}"
               target="${javac.target}"
               debug="true"
               fork="true"
               includeantruntime="false">

            <compilerarg line="${javac.compile.args}"/>
            <classpath refid="compile.classpath"/>
            <src path="${dir.src}"/>
        </javac>

        <copy todir="${dir.build.classes}">
            <fileset dir="${dir.src}">
                <include name="viskit/version.txt"/>
                <include name="viskit/images/*.png"/>
                <include name="viskit/images/*.gif"/>
                <include name="viskit/images/*.jpg"/>
            </fileset>
            <fileset dir="${basedir}">
                <include name="${configuration.dir}/log4j.properties"/>
                <include name="${analyst.report.stylesheet}"/>
            </fileset>
        </copy>

        <!-- For some reason, viskit.doe.package-info.java makes its own directory in classes -->
        <delete dir="${dir.build.classes}/doe"/>
    </target>

    <target name="javahelp"
            depends="init"
            description="build the help search database">

        <java classname="com.sun.java.help.search.Indexer"
              fork="true">

            <!-- turn this on to make sure it's working -->
            <!--arg value="-verbose"/-->
            <arg value="-db"/>
            <arg value="${build.javahelp}/JavaHelpSearch"/>
            <arg value="${javahelp}/Pages"/>
            <classpath>
                <pathelement location="${dir.lib}/jhall.jar"/>
            </classpath>
        </java>
        <copy todir="${build.javahelp}">
            <fileset dir="${javahelp}"/>
        </copy>
    </target>

    <!--  === TARGET: jar === -->
    <target name="jar" depends="compile">
        <jar basedir="${dir.build.classes}"
             compress="false"
             destfile="${dist.jar}">
            <manifest>
                <attribute name="Built-By" value="${my.name}"/>
                <attribute name="Specification-Title"
                           value="${product.Name}"/>
                <attribute name="Specification-Version"
                           value="${product.version.major}.${product.version.minor}"/>
                <attribute name="Specification-Vendor"
                           value="${spec.vendor}"/>
                <attribute name="Implementation-Title"
                           value="${impl.title}"/>
                <attribute name="Implementation-Version"
                           value="${product.Version} built on ${TODAY} at ${TSTAMP} hrs"/>
                <attribute name="Implementation-Vendor"
                           value="${nps}, ${moves.institute}, ${savage.research.group}"/>
                <attribute name="Implementation-URL"
                           value="${Savage.url}"/>

                <section name="edu.nps.util"/>
                <section name="viskit"/>
                <section name="viskit.assembly"/>
                <section name="viskit.control"/>
                <section name="viskit.doe"/>
                <section name="viskit.gridlet"/>
                <section name="viskit.images"/>
                <section name="viskit.jgraph"/>
                <section name="viskit.model"/>
                <section name="viskit.mvc"/>
                <section name="viskit.util"/>
                <section name="viskit.view"/>
                <section name="viskit.view.dialog"/>
                <section name="viskit.xsd.bindings.assembly"/>
                <section name="viskit.xsd.bindings.assembly.stats"/>
                <section name="viskit.xsd.bindings.cli"/>
                <section name="viskit.xsd.bindings.eventgraph"/>
                <section name="viskit.xsd.cli"/>
                <section name="viskit.xsd.translator.assembly"/>
                <section name="viskit.xsd.translator.eventgraph"/>
            </manifest>
            <metainf file="license/lgpl.txt"/>
            <metainf file="license/license.txt"/>
        </jar>
    </target>

    <target name="make.classpath"
            depends="make.classpath.win,make.classpath.unix,make.classpath.mac"
            description="Platform specific Class-Path header for the executable jar"/>

    <target name="make.classpath.win" if="isWindows">
        <pathconvert dirsep="/"
                     pathsep=" "
                     property="launcher.classpath"
                     refid="runtime.classpath">
            <map from="*${dir.build.classes}" to=""/>
            <mapper>
                <globmapper from="${basedir}\lib\*" to="lib/*"/>
            </mapper>
        </pathconvert>
    </target>

    <target name="make.classpath.unix" if="isUnixNotMac">
        <pathconvert dirsep="/"
                     pathsep=" "
                     property="launcher.classpath"
                     refid="runtime.classpath">
            <map from="*${dir.build.classes}" to=""/>
            <mapper>
                <globmapper from="${basedir}/lib/*" to="lib/*"/>
            </mapper>
        </pathconvert>
    </target>

    <target name="make.classpath.mac" if="isMac">
        <pathconvert dirsep="/"
                     pathsep=" "
                     property="launcher.classpath"
                     refid="runtime.classpath">
            <map from="*${dir.build.classes}" to=""/>
            <mapper>
                <globmapper from="${basedir}/lib/*" to="lib/*"/>
            </mapper>
        </pathconvert>
    </target>

    <target name="jar.executable" depends="jar,make.classpath">

        <echo message="${toString:runtime.classpath}"/>
        <echo message="${launcher.classpath}"/>

        <jar basedir="${dir.build.classes}"
             compress="false"
             destfile="${dist.exe.jar}">
            <manifest>
                <attribute name="Built-By" value="${my.name}"/>
                <attribute name="Specification-Title"
                           value="${product.Name}"/>
                <attribute name="Specification-Version"
                           value="${product.version.major}.${product.version.minor}"/>
                <attribute name="Specification-Vendor"
                           value="${spec.vendor}"/>
                <attribute name="Implementation-Title"
                           value="${impl.title}"/>
                <attribute name="Implementation-Version"
                           value="${product.Version} built on ${TODAY} at ${TSTAMP} hrs"/>
                <attribute name="Implementation-Vendor"
                           value="${nps}, ${moves.institute}, ${savage.research.group}"/>
                <attribute name="Implementation-URL"
                           value="${Savage.url}"/>

                <!-- used by native launcher, see launch4j -->
                <attribute name="Main-Class" value="viskit.Splash2" />
                <attribute name="Class-Path" value="${launcher.classpath}" />

                <section name="edu.nps.util"/>
                <section name="viskit"/>
                <section name="viskit.assembly"/>
                <section name="viskit.control"/>
                <section name="viskit.doe"/>
                <section name="viskit.gridlet"/>
                <section name="viskit.images"/>
                <section name="viskit.jgraph"/>
                <section name="viskit.model"/>
                <section name="viskit.mvc"/>
                <section name="viskit.util"/>
                <section name="viskit.view"/>
                <section name="viskit.view.dialog"/>
                <section name="viskit.xsd.bindings.assembly"/>
                <section name="viskit.xsd.bindings.assembly.stats"/>
                <section name="viskit.xsd.bindings.cli"/>
                <section name="viskit.xsd.bindings.eventgraph"/>
                <section name="viskit.xsd.cli"/>
                <section name="viskit.xsd.translator.assembly"/>
                <section name="viskit.xsd.translator.eventgraph"/>
            </manifest>
            <metainf file="license/lgpl.txt"/>
            <metainf file="license/license.txt"/>
        </jar>
    </target>

    <target name="fresh.diskit" description="diskit module">
        <echo message="Building Diskit:"/>
        <ant dir="${dir.diskit}" target="jar" inheritAll="false"/>
        <copy file="${dir.diskit}/dist/lib/diskit.jar" todir="${dir.lib.ext}"/>
        <copy todir="${dir.lib.ext}">
            <fileset dir="${dir.diskit}/lib">
                <include name="open-dis_4.08.jar"/>
                <include name="dis-enums_1.1.jar"/>
                <include name="hibernate-jpa-2.0-api-1.0.0.Final.jar"/>
            </fileset>
        </copy>
    </target>

    <!-- just add new modules to the depends variable here -->
    <target name="runtime.extensions"
            depends="fresh.diskit"
            description="compile application specific modules, like diskit"/>

    <target name="build.viskit.with.extensions"
            depends="jar,runtime.extensions"
            description="Build viskit and any extension jars"/>

    <target name="build.viskit.no.extensions"
            depends="jar"
            description="Build viskit jar only, no DES extensions"/>

    <!--  === TARGET: doc. Create javadocs and put the result in the docs directory. === -->
    <target name="doc"
            depends="build.init,compile"
            description="Create the javadoc for Viskit.">

        <delete dir="${dir.api.doc}"/>
        <mkdir dir="${dir.api.doc}"/>
        <javadoc access="public"
                 author="true"
                 destdir="${dir.api.doc}"
                 sourcepath="${dir.src}"
                 bottom="${copyright}"
                 version="true">

            <!-- Include all the jar files in the lib directory; this prevents some
            javadoc warnings about classes not being found. -->
            <classpath>
                <fileset refid="jaxb.classes"/>
                <fileset dir="${dir.lib}" includes="*.jar"/>
            </classpath>
            <package name="edu.nps.util"/>
            <package name="viskit"/>
            <package name="viskit.assembly"/>
            <package name="viskit.control"/>
            <package name="viskit.doe"/>
            <package name="viskit.gridlet"/>
            <package name="viskit.images"/>
            <package name="viskit.jgraph"/>
            <package name="viskit.model"/>
            <package name="viskit.mvc"/>
            <package name="viskit,reports"/>
            <package name="viskit.util"/>
            <package name="viskit.view.*"/>
            <package name="viskit.xsd.bindings.assembly"/>
            <package name="viskit.xsd.bindings.assembly.stats"/>
            <package name="viskit.xsd.bindings.cli"/>
            <package name="viskit.xsd.bindings.eventgraph"/>
            <package name="viskit.xsd.cli"/>
            <package name="viskit.xsd.translator.assembly"/>
            <package name="viskit.xsd.translator.eventgraph"/>

            <!-- Updated links to current APIs -->
            <link href="${j2se.api}"/>
            <link href="${simkit.api}"/>
            <link href="${jdom.api}"/>
	    <link href="${commons.config.api}"/>
	    <link href="${jfreechart.api}"/>
	    <link href="${jgraph.api}"/>
        </javadoc>
    </target>

    <!-- === TARGET: dist === -->
    <target name="dist" depends="clean,jar,doc">
        <mkdir dir="${dir.dist}"/>
        <mkdir dir="${dir.dist}/doc/api"/>
        <mkdir dir="${dir.dist}/examples"/>
        <copy todir="${dir.dist}">
            <fileset dir="${dir.build.lib}"/>
        </copy>
        <copy todir="${dir.dist}/doc">
            <fileset dir="${dir.api.doc}"/>
        </copy>
        <copy todir="${dir.dist}/examples">
            <fileset dir="${examples.lib}">
                <include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="build.gridkit" depends="build.viskit.with.extensions">
        <delete dir="${dir.dist}"/>
        <mkdir dir="${dir.dist}/lib"/>

        <copy todir="${dir.dist}/lib">
            <fileset file="${dist.jar}"/>
            <fileset dir="${dir.lib}">
                <include name="bsh-2.0b4.jar"/>
                <include name="commons-beanutils-1.8.3.jar"/>
                <include name="commons-codec-1.3.jar"/>
                <include name="commons-collections-3.2.1.jar"/>
                <include name="commons-configuration-1.7.jar"/>
                <include name="commons-digester-2.1.jar"/>
                <include name="commons-lang-2.6.jar"/>
                <include name="commons-logging-1.1.1.jar"/>
                <include name="jdom.jar"/>
                <include name="log4j.jar"/>
                <include name="simkit.jar"/>
                <include name="xmlrpc-2.0.jar"/>
            </fileset>
            <fileset dir="${dir.lib.ext}">
                <include name="*.jar"/>
            </fileset>
            <fileset refid="jaxb.classes"/>
        </copy>

        <mkdir dir="${dir.dist}/gridkit-stage"/>
        <copy todir="${dir.dist}/gridkit-stage">
            <fileset dir="${dir.src.cli.util}">
                <include name="config.properties"/>
            </fileset>
        </copy>

        <mkdir dir="${dir.dist}/gridkit-stage/examples"/>
        <copy todir="${dir.dist}/gridkit-stage/examples">
            <fileset dir="${examples.lib}">
                <include name="**/*.xml"/>
                <exclude name="**/viskitProject.xml"/>
            </fileset>
        </copy>

        <mkdir dir="${dir.dist}/gridkit-stage/viskit/xsd/cli"/>
        <copy todir="${dir.dist}/gridkit-stage/viskit/xsd/cli" >
            <fileset dir="${dir.build}/classes/viskit/xsd/cli" >
                <include name="Boot.class"/>
                <include name="Launcher.class"/>
            </fileset>
        </copy>

        <jar basedir="${dir.dist}/gridkit-stage"
             destfile="${dir.dist}/gridkit.jar"
             manifest="${dir.src.cli.util}/manif.txt" />

    </target>

    <!-- TARGET: Run w/Viskit custom splash -->
    <target name="build.run.with.extensions"
            depends="build.viskit.with.extensions,quick.run"
            description="Build and Run Viskit extended, include external runtime modules, Viskit custom Splash">
    </target>
    <target name="build.run.no.extensions"
            depends="jar,quick.run"
            description="Build and Run Viskit only, no module dependencies, Viskit custom Splash">
    </target>

    <!-- TARGET: Quick Run, don't check dependencies, TBD ant should be able to not rebuild if not needed -->
    <target name="quick.run"
            depends="init,quick.run.win,quick.run.mac,quick.run.linux"
            description="Run Viskit, don't check dependencies, don't rebuild"/>

    <target name="quick.run.win" if="isWindows">
        <java classname="viskit.Splash2"
              classpathref="runtime.classpath"
              fork="true">

            <jvmarg line="${common.run.args}"/>
            <arg value="${main.class}"/>
        </java>
    </target>

    <target name="quick.run.linux" if="isUnixNotMac">
        <java classname="viskit.Splash2"
              classpathref="runtime.classpath"
              fork="true">

            <jvmarg line="${common.run.args}"/>
            <arg value="${main.class}"/>
        </java>
    </target>

    <target name="quick.run.mac" if="isMac">
        <java classname="viskit.Splash2"
              classpathref="runtime.classpath"
              fork="true">

	    <jvmarg line="${common.run.args}"/>
            <jvmarg value="-Xdock:name=${product.shortname}"/>
            <jvmarg value="-Dapple.awt.graphics.UseQuartz=true"/>
            <jvmarg value="-Dapple.laf.useScreenMenuBar=true"/>
            <arg value="${main.class}"/>
        </java>
    </target>

    <target name="debug.viskit.exe.jar"
            depends="jar.executable"
            description="Test the ${dist.exe.jar}">

        <fail unless="netbeans.home">This target can only run inside the NetBeans IDE.</fail>
        <nbjpdastart addressproperty="jpda.address" name="Viskit" transport="dt_socket">
            <classpath refid="runtime.classpath"/>
        </nbjpdastart>

        <copy todir="${basedir}">
            <fileset refid="runtime.viskit.exe"/>
        </copy>

        <java jar="viskit-exe.jar"
              fork="true"
              failonerror="true">

            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xnoagent"/>
            <jvmarg value="-Djava.compiler=none"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
            <jvmarg line="${common.run.args}"/>
        </java>

    </target>

    <target depends="compile,quick.debug" description="Debug Project" name="debug"/>

    <!-- TARGET: Quick Debug don't check dependencies -->
    <target depends="init" name="quick.debug" description="Debug Viskit, don't check dependencies, don't rebuild">

        <fail unless="netbeans.home">This target can only run inside the NetBeans IDE.</fail>
        <nbjpdastart addressproperty="jpda.address" name="Viskit" transport="dt_socket">
            <classpath refid="runtime.classpath"/>
        </nbjpdastart>
        <java classname="${debug.class}"
              classpathref="runtime.classpath"
              fork="true">
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xnoagent"/>
            <jvmarg value="-Djava.compiler=none"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>

            <jvmarg line="${common.run.args}"/>

            <!-- Any debug args can go here -->
            <!--arg value="localhost" />
            <arg value="4444" /-->
        </java>
    </target>

    <target name="compile.test" depends="build.init"
            description="Build the JUnit test harness">

        <javac destdir="${dir.build.test.classes}"
               source="${javac.source}"
               target="${javac.target}"
               debug="true"
               includeantruntime="false">

            <compilerarg line="${javac.compile.args}"/>
            <classpath refid="runtime.test.classpath"/>
            <src path="${dir.test}"/>
        </javac>

    </target>

    <target name="test" depends="test-code-format" description="run all working tests">
        <!-- TODO add other test targets and other tests when ready -->
    </target>

    <target name="test-code-format" depends="compile.test" description="TestCodeFormat runner">
        <echo message="viskit.test.TestCodeFormat test/ArrayTester.xml"/>
        <!-- TODO improve output formatting -->
        <java classname="viskit.test.TestCodeFormat" classpathref="runtime.test.classpath" fork="true" failonerror="true">
            <arg value="test/ArrayTester.xml"/>
        </java>
    </target>

    <!-- For the following test targets set up a server, first run the ant gridkit-jar target,
         then on the command line, navigate to the Viskit base directory and :
         "java -Djava.endorsed.dirs=dist/lib/endorsed -jar dist/gridkit.jar", then run
         the below target
    -->

    <!-- Run this first to establish login credentials for the gridlet -->
    <target name="test-gridkit-login" depends="compile.test" description="Test Gridkit login">
        <java classname="viskit.test.TestGridkitLogin" classpathref="runtime.test.classpath" fork="true">
            <arg value="localhost" />
            <arg value="4444" />
        </java>
    </target>

    <!-- Currently, we do not include the qstat package.  This will not work -->
    <target name="test-gridkit-qstat" depends="compile.test" description="Test Gridkit qstat">
        <java classname="viskit.test.TestGridkitQstat" classpathref="runtime.test.classpath" fork="true">
            <arg value="localhost" />
            <arg value="4444" />
        </java>
    </target>

    <!-- Currently, we do not include the qsub package.  This will not work -->
    <target name="test-gridkit-ServerAssembly3" depends="compile.test" description="Test Gridkit ServerAssembly3">
        <java classname="viskit.test.TestGridkitServerAssembly3" classpathref="runtime.test.classpath" fork="true">
            <arg value="localhost" />
            <arg value="4444" />
        </java>
    </target>

    <target name="runDOE"
            depends="jar, runtime.extensions"
            description="Run Design-Of-Experiments">
        <java classname="viskit.doe.DoeMain" classpathref="runtime.classpath" fork="true" dir="${basedir}"/>
    </target>

    <!--  === TARGET: clean === -->
    <target name="clean"
            depends="nuke.dot.viskit"
            description="Deletes build directory, xsd bindings, dist directories, and lib/ext/*.jar(s)">
        <delete dir="${dir.bindings}"/>
        <delete dir="${dir.build}"/>
        <delete dir="${dir.dist}"/>
        <delete dir="${dir.lib.ext}">
            <include name="*.jar"/>
        </delete>
        <delete file="viskit-exe.jar"/>
    </target>

    <target name="nuke.dot.viskit" description="Abolish an out of synch confituration and metadata directory">
        <delete includeemptydirs="yes" dir="${user.home}/.viskit"/>
    </target>

    <!-- These targets are useful for viewing in the console various
         ${user.home}/.viskit properties/config files -->

    <target name="show.debug.log" depends="build.init">
        <concat>
            <fileset dir="${user.home}/.viskit" includes="debug.log"/>
        </concat>
    </target>

    <target name="show.app.xml" depends="build.init">
        <concat>
            <fileset dir="${user.home}/.viskit" includes="c_app.xml"/>
        </concat>
    </target>

    <target name="show.gui.xml" depends="build.init">
        <concat>
            <fileset dir="${user.home}/.viskit" includes="c_gui.xml"/>
        </concat>
    </target>

    <target name="show.passwd.xml" depends="build.init">
        <concat>
            <fileset dir="${user.home}/.viskit" includes="passwd.xml"/>
        </concat>
    </target>

    <target name="show.validation.errors" depends="build.init">
        <concat>
            <fileset dir="${user.home}/.viskit" includes="validationErrors.log"/>
        </concat>
    </target>

    <target name="show.config.xml" depends="build.init">
        <concat>
            <fileset dir="${env.HOME}/.viskit" includes="vconfig.xml"/>
        </concat>
    </target>

    <!-- add izpack installer task -->
    <import file="buildInstallers.xml"/>

</project>