<?xml version="1.0" encoding="UTF-8"?>

<!-- Seems to render in Mozilla Firefox the best.  Broken in IE7 -->
<?xml-stylesheet type="text/xsl" href="./ant2html.xsl"?>

<project basedir="." default="build.installers.no.extensions" name="Viskit-Installers">
    <description>
        Ant build file for the NPS Viskit installer build tasks.
    </description>

    <!-- ID properties (this file) -->
    <property name="SVNId" value="$Id$"/>
    <property name="installer" value="${basedir}/installer"/>
    <property name="launch4j" value="${user.home}/launch4j"/>
    <property name="orangevolt.jar" value="${dir.lib}/izpack/orangevolt-ant-tasks-1.3.8.jar"/>
    <property name="roxes.jar" value="${dir.lib}/izpack/roxes-win32forjava-1.1.1.jar"/>

    <!-- get all izpack related packages -->
    <condition property="build.host.linux">
        <and>
            <os family="unix"/>

            <not>
                <equals arg1="${os.name}" arg2="Mac OS X"/>
            </not>

        </and>
    </condition>
    <condition property="build.host.windows">
        <os family="windows"/>
    </condition>
    <condition property="build.host.mac">
        <os family="mac"/>
    </condition>

    <taskdef name="izpack"
             classpath="${dir.lib}/izpack/standalone-compiler.jar"
             classname="com.izforge.izpack.ant.IzPackTask"/>

    <!-- No good way of getting around this as we need the binary for the particular platform -->
    <target name="checkLaunch4j">
        <available file="${launch4j}/launch4j.jar" property="launch4j.exists" />
    </target>
    <target name="getLaunch4j" depends="checkLaunch4j" unless="launch4j.exists" >
        <!-- only one of these should pass -->
        <!--ant target="getLaunch4jWin32"/>
        <ant target="getLaunch4jLinux"/>
        <ant target="getLaunch4jMac"/-->
    </target>

    <target name="getLaunch4jWin32" if="build.host.windows">
        <get src="http://downloads.sourceforge.net/project/launch4j/launch4j-3/3.0.1/launch4j-3.0.1-win32.zip" dest="${launch4j}.zip" />
        <unzip src="${user.home}/launch4j.zip" dest="${user.home}"/>
        <delete file="${launch4j}.zip"/>
    </target>

    <target name="getLaunch4jLinux" if="build.host.linux">
        <get src="http://downloads.sourceforge.net/project/launch4j/launch4j-3/3.0.1/launch4j-3.0.1-linux.tgz" dest="${launch4j}.tgz" />
        <untar src="${launch4j}.tgz" dest="${user.home}" compression="gzip"/>
        <chmod file="${launch4j}/bin/windres" perm="a+x"/>
        <chmod file="${launch4j}/bin/ld" perm="a+x"/>
        <delete file="${launch4j}.tgz"/>
    </target>

    <target name="getLaunch4jMac" if="build.host.mac">
        <get src="http://downloads.sourceforge.net/project/launch4j/launch4j-3/3.0.1/launch4j-3.0.1-macosx.tgz" dest="${launch4j}.tgz" />
        <untar src="${user.home}/launch4j.tgz" dest="${user.home}" compression="gzip"/>
        <delete file="${launch4j}.tgz"/>
    </target>

    <target name="check.viskit">
        <available file="${dir.build.lib}/viskit.jar" property="viskit.built"/>
    </target>
    <target name="no.extensions" depends="check.viskit" unless="viskit.built" >
        <ant target="jar"/>
    </target>
    <target name="with.extensions" depends="no.extensions" unless="extensions.built">
        <ant target="runtime.extensions"/>
    </target>

    <!-- adapted from izpack wiki for building IzPack with native Launch4j'er on Win32 -->
    <target name="build.installers.no.extensions"
            depends="no.extensions,getLaunch4j,clean.installers"
            description="Build the installers with no runtime extensions">

        <copy todir="${installer}/stage/">
            <fileset dir="${dir.src}/viskit/javahelp/VisPages">
                <include name="intro_no_diskit.html"/>
            </fileset>
        </copy>
        <ant target="installers.common"/>
        <ant target="make.win.unix.installer"/>
        <ant target="make.mac.installer"/>
    </target>

    <!-- adapted from izpack wiki for building IzPack with native Launch4j'er on Win32 -->
    <target name="build.installers.with.extensions"
            depends="with.extensions,getLaunch4j,clean.installers"
            description="Builds the installers with runtime extension libraries included">

        <copy todir="${installer}/stage/lib/ext">
            <fileset refid="runtime.lib.ext"/>
        </copy>
        <copy todir="${installer}/stage/">
            <fileset dir="${dir.src}/viskit/javahelp/VisPages">
                <include name="intro.html"/>
            </fileset>
        </copy>
        <ant target="installers.common"/>
        <ant target="make.win.unix.installer"/>
        <ant target="make.mac.installer"/>
    </target>

    <target name="installers.common">
        <copy todir="${installer}/stage/Schemas">
            <fileset dir="${basedir}/Schemas"/>
        </copy>
        <copy todir="${installer}/stage/configuration">
            <fileset dir="${configuration.dir}"/>
        </copy>
        <copy todir="${installer}/stage/MyViskitProjects/DefaultProject">
            <fileset dir="${examples.lib}"/>
        </copy>
        <copy todir="${installer}/stage/images">
            <fileset dir="${installer}/images"/>
        </copy>
        <copy todir="${installer}/stage/lib" >
            <fileset refid="runtime.lib"/>
        </copy>
        <copy todir="${installer}/stage/license">
            <fileset dir="${basedir}/license"/>
        </copy>
        <copy todir="${installer}/stage/viskit/javahelp">
            <fileset dir="${dir.src}/viskit/javahelp"/>
        </copy>
        <mkdir dir="${installer}/build" />
    </target>

    <target name="make.win.unix.installer">

        <!--taskdef name="launch4j"
                 classname="net.sf.launch4j.ant.Launch4jTask"
                 classpath="${launch4j}/launch4j.jar:${launch4j}/lib/xstream.jar"/-->

        <!-- The last d/l gave me a fit about permissions -->
        <!--chmod file="${launch4j}/bin/windres" perm="ugo+rx"/>
        <chmod file="${launch4j}/bin/ld"      perm="ugo+rx"/-->

        <!-- for the sfx executable task -->
        <taskdef classpath="${orangevolt.jar}:${roxes.jar}"
                 resource="com/orangevolt/tools/ant/taskdefs.properties"/>

        <!-- Wrap the viskit.jar in a native win32 executable -->
        <!--launch4j configFile="${installer}/launch4jConfig.xml"/>

        <copy todir="${installer}/stage">
            <fileset refid="runtime.viskit.exe"/>
        </copy>
        <delete>
            <fileset refid="runtime.viskit.exe"/>
        </delete-->

        <echo message="Running IzPack to build the installers..."/>

        <!-- create an executable out of the jar file that installs Viskit and related files, assumes java exists,
            however once Viskit.exe actually runs it should check and download latest JDK -->
        <izpack input="${installer}/izpack.xml"
                output="${installer}/build/ViskitInstallWin.jar"
                installerType="standard"
                basedir="${installer}"
                inheritAll="true"
                compression="deflate"
                compressionlevel="9"/>
        <izpack input="${installer}/izpack.xml"
                output="${installer}/build/ViskitInstallUnix.jar"
                installerType="standard"
                basedir="${installer}"
                inheritAll="true"
                compression="deflate"
                compressionlevel="9"/>

        <!-- create native win32 wrapper in case java doesn't exist yet to bootstrap ViskitInstall.jar as .exe -->
        <!--launch4j>
            <config chdir="."
                    dontwrapjar="false"
                    jar="${installer}/build/ViskitInstallWin.jar"
                    outfile="${installer}/build/ViskitInstallWin32.exe"
                    headertype="gui"
                    icon="${installer}/images/ViskitIcon.ico" >
                <jre minVersion="1.7.0"/>
            </config>
        </launch4j-->
    </target>

    <target name="make.mac.installer">
        <copy file="${dist.jar}" todir="${installer}/stage/lib"/>
        <izpack input="${installer}/izpackMac.xml"
                output="${installer}/build/ViskitInstallMac.jar"
                installerType="standard"
                basedir="${installer}"
                inheritAll="true"
                compression="deflate"
                compressionlevel="9"/>
        <echo message="IzPack installer builds complete"/>
    </target>

    <target name="clean.installers">
        <delete dir="${installer}/build"/>
        <delete dir="${installer}/stage"/>
    </target>

    <target name="clean.installer.materials"
            depends="clean.installers"
            description="Clean up all materials from building a Viskit installation executable">

         <delete dir="${launch4j}"/>
    </target>

</project>