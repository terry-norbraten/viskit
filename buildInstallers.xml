<?xml version="1.0" encoding="UTF-8"?>

<!-- Seems to render in Mozilla Firefox the best.  Broken in IE7 -->
<?xml-stylesheet type="text/xsl" href="./ant2html.xsl"?>

<project basedir="." default="build.installers.no.extensions" name="Viskit-Installers">
    <description>
        Ant build file for the NPS Viskit installer build tasks.
    </description>

    <!-- Override the install location for Launch4J -->
    <property file="nbproject/private/private.properties"/>

    <!-- ID properties (this file) -->
    <property name="installers.dir" value="${basedir}/installer"/>
    <property name="launch4j" value="${user.home}/launch4j"/>

    <!-- get all izpack related packages -->
    <condition property="build.host.linux">
        <and>
            <os family="unix"/>

            <not>
                <equals arg1="${os.name}" arg2="Mac OS X"/>
            </not>

        </and>
    </condition>
    <condition property="build.host.windows">
        <os family="windows"/>
    </condition>
    <condition property="build.host.mac">
        <os family="mac"/>
    </condition>

    <!-- ===== Build Viskit installer jars into ./installer directory ===== -->
    
    <!-- Prerequisite for creating installer: you must have local izPack v5+ installed from http://izpack.org
         Place ${izpack.dist} key in nbproject/private/private.properties pointing to local izPack 
         Prerequisite: apply .jar fix in ${izpack.dist}/izpack-lang-fix to local ${izpack.dist}/lib -->
    <path id="izpack.lib.path">
        <fileset dir="${izpack.dist}/lib" includes="*.jar"/>
    </path>
  
    <taskdef name="izpack"
             classpathref="izpack.lib.path"
             classname="com.izforge.izpack.ant.IzPackTask"/>

    <!-- No good way of getting around this as we need the binary for the particular platform -->
    <target name="checkLaunch4j">
        <available file="${launch4j}/launch4j.jar" property="launch4j.exists" />
    </target>
    <target name="getLaunch4j" depends="checkLaunch4j" unless="launch4j.exists" >
        <!-- only one of these should pass -->
        <ant target="getLaunch4jWin"/>
        <ant target="getLaunch4jLinux"/>
        <ant target="getLaunch4jMac"/>
    </target>

    <target name="getLaunch4jWin" if="build.host.windows">
        <get src="https://sourceforge.net/projects/launch4j/files/launch4j-3/3.50/launch4j-3.50-win32.zip/download" dest="${launch4j}.zip" />
        <unzip src="${user.home}/launch4j.zip" dest="${user.home}"/>
        <delete file="${launch4j}.zip"/>
    </target>

    <target name="getLaunch4jLinux" if="build.host.linux">
        <get src="https://sourceforge.net/projects/launch4j/files/launch4j-3/3.50/launch4j-3.50-linux-x64.tgz" dest="${launch4j}.tgz" />
        <untar src="${launch4j}.tgz" dest="${user.home}" compression="gzip"/>
        <chmod file="${launch4j}/bin/windres" perm="a+x"/>
        <chmod file="${launch4j}/bin/ld" perm="a+x"/>
        <delete file="${launch4j}.tgz"/>
    </target>

    <target name="getLaunch4jMac" if="build.host.mac">
        <get src="https://sourceforge.net/projects/launch4j/files/launch4j-3/3.50/launch4j-3.50-macosx-x86.tgz" dest="${launch4j}.tgz" />
        <untar src="${user.home}/launch4j.tgz" dest="${user.home}" compression="gzip"/>
        <chmod file="${launch4j}/bin/windres" perm="a+x"/>
        <chmod file="${launch4j}/bin/ld"      perm="a+x"/>
        <delete file="${launch4j}.tgz"/>
    </target>

    <target name="check.viskit">
        <available file="${dir.build.lib}/viskit-exe.jar" property="viskit.built"/>
    </target>
    <target name="no.extensions" depends="check.viskit" unless="viskit.built">
        <ant target="jar.executable"/>
    </target>
    <target name="with.extensions" depends="no.extensions" unless="extensions.built">
        <ant target="runtime.extensions"/>
    </target>

    <!-- adapted from izpack wiki for building IzPack with native Launch4j'er on Win32 -->
    <target name="build.installers.no.extensions"
            depends="no.extensions,getLaunch4j,clean.installers"
            description="Build the installers with no runtime extensions">

        <ant target="installers.common"/>
        <ant target="make.win.unix.installer"/>
        <ant target="make.mac.installer"/>

        <echo message="IzPack installer builds complete"/>
    </target>

    <!-- adapted from izpack wiki for building IzPack with native Launch4j'er on Win32 -->
    <target name="build.installers.with.extensions"
            depends="with.extensions,getLaunch4j,clean.installers"
            description="Builds the installers with runtime extension libraries included">

        <copy todir="${installers.dir}/stage/lib/ext">
            <fileset refid="runtime.lib.ext"/>
        </copy>
        <copy todir="${installers.dir}/stage/">
            <fileset dir="${dir.src}/viskit/javahelp/Pages">
                <include name="Introduction.html"/>
            </fileset>
        </copy>
        <ant target="installers.common"/>
        <ant target="make.win.unix.installer"/>
        <ant target="make.mac.installer"/>

        <echo message="IzPack installer builds complete"/>
    </target>

    <target name="installers.common">
        <copy todir="${installers.dir}/stage/Schemas">
            <fileset dir="${basedir}/Schemas"/>
        </copy>
        <copy todir="${installers.dir}/stage/configuration">
            <fileset dir="${configuration.dir}"/>
        </copy>
        <copy todir="${installers.dir}/stage/MyViskitProjects/DefaultProject">
            <fileset dir="${examples.lib}"/>
        </copy>
        <copy todir="${installers.dir}/stage/images">
            <fileset dir="${installers.dir}/images"/>
        </copy>
        <copy todir="${installers.dir}/stage/lib" >
            <fileset refid="runtime.lib"/>
        </copy>
        <copy todir="${installers.dir}/stage/license">
            <fileset dir="${basedir}/license"/>
        </copy>
        <copy todir="${installers.dir}/stage/viskit/javahelp">
            <fileset dir="${dir.src}/viskit/javahelp"/>
        </copy>
        <copy todir="${installers.dir}/stage/">
            <fileset dir="${dir.src}/viskit/javahelp/Pages">
                <include name="Introduction.html"/>
            </fileset>
            <fileset dir="${basedir}">
                <include name="RELEASE_NOTES*"/>
            </fileset>
        </copy>
        <copy todir="${installers.dir}/stage/doc">
            <fileset dir="${basedir}/doc">
                <include name="ViskitOperation.txt"/>
                <include name="Viskit-overview.pdf"/>
                <include name="NB-Project-Creation.txt"/>
                <include name="references/Discrete Event Simulation Modeling.pdf"/>
            </fileset>
        </copy>
    </target>

    <target name="make.win.unix.installer">

<!--        <taskdef name="launch4j"
                 classname="net.sf.launch4j.ant.Launch4jTask"
                 classpath="${launch4j}/launch4j.jar:${launch4j}/lib/xstream.jar"/>

         Associate the viskit-exe.jar with a native win executable 
        <launch4j configFile="${installers.dir}/launch4jConfig.xml"/>-->

        <copy todir="${installers.dir}/stage">
            <fileset refid="runtime.viskit.exe"/>
        </copy>
        <delete>
            <fileset refid="runtime.viskit.exe"/>
        </delete>

        <echo message="Running IzPack to build the installers..."/>

        <!-- create an executable out of the jar file that installs Viskit and related files, assumes java exists,
             however once Viskit.exe actually runs it should check and download latest JDK -->
        <!-- TODO: commons-compress-1.21 in NB IDE install throwing URISyntaxException during any compress op -->
        <izpack input="${installers.dir}/izpack.xml"
                output="${installers.dir}/build/${win.installer.jar}"
                installerType="standard"
                baseDir="${installers.dir}"
                inheritAll="true"
                compression="default" 
                compressionlevel="9"
                izPackDir="${izpack.dist}"
                mkdirs="true"/>
        <izpack input="${installers.dir}/izpack.xml"
                output="${installers.dir}/build/${linux.installer.jar}"
                installerType="standard"
                baseDir="${installers.dir}"
                inheritAll="true"
                compression="default"
                compressionLevel="9"
                izPackDir="${izpack.dist}"
                mkdirs="true"/>

        <!-- create native installer wrapping the ViskitInstallWin.jar as .exe -->
<!--        <launch4j>
            <config chdir="."
                    dontwrapjar="false"
                    jar="${installers.dir}/build/${win.installer.jar}"
                    outfile="${installers.dir}/build/${win.installer.exe}"
                    headertype="gui"
                    icon="${installers.dir}/images/ViskitIcon.ico">
                <jre minVersion="17"/>
            </config>
        </launch4j>-->

        <chmod file="${installers.dir}/build/${win.installer.jar}" perm="ugo+rx"/>
        <chmod file="${installers.dir}/build/${linux.installer.jar}" perm="ugo+rx"/>
    </target>

    <target name="make.mac.installer">
        <copy file="${dist.jar}" todir="${installers.dir}/stage/lib"/>
        <izpack input="${installers.dir}/izpackMac.xml"
                output="${installers.dir}/build/${mac.installer.jar}"
                installerType="standard"
                basedir="${installers.dir}"
                inheritAll="true"
                compression="default"
                compressionlevel="9"
                izPackDir="${izpack.dist}"
                mkdirs="true"/>

        <chmod file="${installers.dir}/build/${mac.installer.jar}" perm="ugo+rx"/>
    </target>

    <target name="clean.installers">
        <delete dir="${installers.dir}/build"/>
        <delete dir="${installers.dir}/stage"/>
    </target>

    <target name="clean.installer.materials"
            depends="clean.installers"
            description="Clean up all materials from building a Viskit installation executable">

        <delete dir="${launch4j}"/> <!-- Careful with this one, esp. if locally installed -->
    </target>

</project>