<?xml version="1.0" encoding="UTF-8"?>

<!-- Seems to render in Mozilla Firefox the best.  Broken in IE7 -->
<?xml-stylesheet type="text/xsl" href="./ant2html.xsl"?>

<project basedir="." default="build.installers.no.extensions" name="Viskit-Installers">
    <description>
        Ant build file for the NPS Viskit installer build tasks.
    </description>

    <!-- ID properties (this file) -->
    <property name="SVNId" value="$Id$"/>
    <property name="installers.dir" value="${basedir}/installer"/>
    <property name="launch4j" value="${user.home}/launch4j"/>

    <!-- get all izpack related packages -->
    <condition property="build.host.linux">
        <and>
            <os family="unix"/>

            <not>
                <equals arg1="${os.name}" arg2="Mac OS X"/>
            </not>

        </and>
    </condition>
    <condition property="build.host.windows">
        <os family="windows"/>
    </condition>
    <condition property="build.host.mac">
        <os family="mac"/>
    </condition>

    <taskdef name="izpack"
             classpath="${dir.lib}/izpack/standalone-compiler.jar"
             classname="com.izforge.izpack.ant.IzPackTask"/>

    <!-- No good way of getting around this as we need the binary for the particular platform -->
    <target name="checkLaunch4j">
        <available file="${launch4j}/launch4j.jar" property="launch4j.exists" />
    </target>
    <target name="getLaunch4j" depends="checkLaunch4j" unless="launch4j.exists" >
        <!-- only one of these should pass -->
        <ant target="getLaunch4jWin"/>
        <ant target="getLaunch4jLinux"/>
        <ant target="getLaunch4jMac"/>
    </target>

    <target name="getLaunch4jWin" if="build.host.windows">
        <get src="http://sourceforge.net/projects/launch4j/files/launch4j-3/3.5/launch4j-3.5-win32.zip" dest="${launch4j}.zip" />
        <unzip src="${user.home}/launch4j.zip" dest="${user.home}"/>
        <delete file="${launch4j}.zip"/>
    </target>

    <target name="getLaunch4jLinux" if="build.host.linux">
        <get src="http://sourceforge.net/projects/launch4j/files/launch4j-3/3.5/launch4j-3.5-linux.tgz" dest="${launch4j}.tgz" />
        <untar src="${launch4j}.tgz" dest="${user.home}" compression="gzip"/>
        <chmod file="${launch4j}/bin/windres" perm="a+x"/>
        <chmod file="${launch4j}/bin/ld" perm="a+x"/>
        <delete file="${launch4j}.tgz"/>
    </target>

    <target name="getLaunch4jMac" if="build.host.mac">
        <get src="http://sourceforge.net/projects/launch4j/files/launch4j-3/3.5/launch4j-3.5-macosx-x86-10.8.tgz" dest="${launch4j}.tgz" />
        <untar src="${user.home}/launch4j.tgz" dest="${user.home}" compression="gzip"/>
        <chmod file="${launch4j}/bin/windres" perm="a+x"/>
        <chmod file="${launch4j}/bin/ld"      perm="a+x"/>
        <delete file="${launch4j}.tgz"/>
    </target>

    <target name="check.viskit">
        <available file="${dir.build.lib}/viskit-exe.jar" property="viskit.built"/>
    </target>
    <target name="no.extensions" depends="check.viskit" unless="viskit.built" >
        <ant target="jar.executable"/>
    </target>
    <target name="with.extensions" depends="no.extensions" unless="extensions.built">
        <ant target="runtime.extensions"/>
    </target>

    <!-- adapted from izpack wiki for building IzPack with native Launch4j'er on Win32 -->
    <target name="build.installers.no.extensions"
            depends="no.extensions,getLaunch4j,clean.installers"
            description="Build the installers with no runtime extensions">

        <copy todir="${installers.dir}/stage/">
            <fileset dir="${dir.src}/viskit/javahelp/VisPages">
                <include name="intro_no_diskit.html"/>
            </fileset>
        </copy>
        <ant target="installers.common"/>
        <ant target="make.win.unix.installer"/>
        <ant target="make.mac.installer"/>
    </target>

    <!-- adapted from izpack wiki for building IzPack with native Launch4j'er on Win32 -->
    <target name="build.installers.with.extensions"
            depends="with.extensions,getLaunch4j,clean.installers"
            description="Builds the installers with runtime extension libraries included">

        <copy todir="${installers.dir}/stage/lib/ext">
            <fileset refid="runtime.lib.ext"/>
        </copy>
        <copy todir="${installers.dir}/stage/">
            <fileset dir="${dir.src}/viskit/javahelp/VisPages">
                <include name="intro.html"/>
            </fileset>
        </copy>
        <ant target="installers.common"/>
        <ant target="make.win.unix.installer"/>
        <ant target="make.mac.installer"/>
    </target>

    <target name="installers.common">
        <copy todir="${installers.dir}/stage/Schemas">
            <fileset dir="${basedir}/Schemas"/>
        </copy>
        <copy todir="${installers.dir}/stage/configuration">
            <fileset dir="${configuration.dir}"/>
        </copy>
        <copy todir="${installers.dir}/stage/MyViskitProjects/DefaultProject">
            <fileset dir="${examples.lib}"/>
        </copy>
        <copy todir="${installers.dir}/stage/images">
            <fileset dir="${installers.dir}/images"/>
        </copy>
        <copy todir="${installers.dir}/stage/lib" >
            <fileset refid="runtime.lib"/>
        </copy>
        <copy todir="${installers.dir}/stage/license">
            <fileset dir="${basedir}/license"/>
        </copy>
        <copy todir="${installers.dir}/stage/viskit/javahelp">
            <fileset dir="${dir.src}/viskit/javahelp"/>
        </copy>
        <copy todir="${installers.dir}/stage">
            <fileset dir="${basedir}">
                <include name="RELEASE_NOTES*"/>
            </fileset>
        </copy>
        <copy todir="${installers.dir}/stage">
            <fileset dir="${basedir}/doc">
                <include name="ViskitOperation.txt"/>
            </fileset>
        </copy>
        <mkdir dir="${installers.dir}/build" />
    </target>

    <target name="make.win.unix.installer">

        <taskdef name="launch4j"
                 classname="net.sf.launch4j.ant.Launch4jTask"
                 classpath="${launch4j}/launch4j.jar:${launch4j}/lib/xstream.jar"/>

        <!-- Associate the viskit-exe.jar with a native win executable -->
        <launch4j configFile="${installers.dir}/launch4jConfig.xml"/>

        <copy todir="${installers.dir}/stage">
            <fileset refid="runtime.viskit.exe"/>
        </copy>
        <delete>
            <fileset refid="runtime.viskit.exe"/>
        </delete>

        <echo message="Running IzPack to build the installers..."/>

        <!-- create an executable out of the jar file that installs Viskit and related files, assumes java exists,
            however once Viskit.exe actually runs it should check and download latest JDK -->
        <izpack input="${installers.dir}/izpack.xml"
                output="${installers.dir}/build/ViskitInstallWin.jar"
                installerType="standard"
                basedir="${installers.dir}"
                inheritAll="true"
                compression="deflate"
                compressionlevel="9"/>
        <izpack input="${installers.dir}/izpack.xml"
                output="${installers.dir}/build/ViskitInstallUnix.jar"
                installerType="standard"
                basedir="${installers.dir}"
                inheritAll="true"
                compression="deflate"
                compressionlevel="9"/>

        <!-- create native installer wrapping the ViskitInstallWin.jar as .exe -->
        <launch4j>
            <config chdir="."
                    dontwrapjar="false"
                    jar="${installers.dir}/build/ViskitInstallWin.jar"
                    outfile="${installers.dir}/build/ViskitInstallWin.exe"
                    headertype="gui"
                    icon="${installers.dir}/images/ViskitIcon.ico">
                <jre minVersion="1.7.0"/>
            </config>
        </launch4j>
    </target>

    <target name="make.mac.installer">
        <copy file="${dist.jar}" todir="${installers.dir}/stage/lib"/>
        <izpack input="${installers.dir}/izpackMac.xml"
                output="${installers.dir}/build/ViskitInstallMac.jar"
                installerType="standard"
                basedir="${installers.dir}"
                inheritAll="true"
                compression="deflate"
                compressionlevel="9"/>
        <echo message="IzPack installer builds complete"/>
    </target>

    <target name="clean.installers">
        <delete dir="${installers.dir}/build"/>
        <delete dir="${installers.dir}/stage"/>
    </target>

    <target name="clean.installer.materials"
            depends="clean.installers"
            description="Clean up all materials from building a Viskit installation executable">

         <delete dir="${launch4j}"/>
    </target>

</project>