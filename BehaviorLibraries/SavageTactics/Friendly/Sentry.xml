<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<SimEntity author="pjsulliv" extend="diskit.FriendlyForce" name="Sentry" package="diskit" version="1.0" xsi:noNamespaceSchemaLocation="http://diana.gl.nps.navy.mil/Simkit/simkit.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Comment>A single human sentry.  This vehicle has the ability to provide sensory data and detect other entities but does not avoid other entities.</Comment>
    <Parameter name="startPosition" type="diskit.Vec3d">
        <Comment>Must be something other than the first waypoint</Comment>
    </Parameter>
    <Parameter name="maxSpeed" type="double">
        <Comment>Maximum speed for this entity</Comment>
    </Parameter>
    <Parameter name="moverID" type="int">
        <Comment>ESPDU unique id Number [0-999]</Comment>
    </Parameter>
    <StateVariable name="visualPerception" type="diskit.Sensor">
        <Comment>Visual sense of RHIB crew</Comment>
    </StateVariable>
    <StateVariable name="visualRange" type="double">
        <Comment>Visual Range for the crew</Comment>
    </StateVariable>
    <StateVariable name="avoidanceRange" type="double">
        <Comment>Proximity tolerance for this contact. Will maneuver to avoid objects that will breach this range</Comment>
    </StateVariable>
    <StateVariable name="tacticalMode" type="diskit.TacticalMode">
        <Comment>Tactical State that the RHIB is in (e.g. Patrolling, Intercepting)</Comment>
    </StateVariable>
    <StateVariable name="patrolManager" type="diskit.ZoneMoverManager">
        <Comment>Mover manager that manages entity movement based on diskit.ZoneGeometry patrol zones</Comment>
    </StateVariable>
    <StateVariable name="waypointGenerator" type="diskit.WaypointCreator">
        <Comment>Generates waypoints based on the diskit.ZoneGeometry for this entity</Comment>
    </StateVariable>
    <StateVariable name="obstacleQueue" type="diskit.ObstacleQueue">
        <Comment>Stores and sorts obstacles based on proximity</Comment>
    </StateVariable>
    <StateVariable name="targetQueue" type="diskit.TargetQueue">
        <Comment>Stores and sorts targets based on proximity</Comment>
    </StateVariable>
    <StateVariable name="successfulIntercepts" type="int">
        <Comment>DATA: Total number of successful intercepts</Comment>
    </StateVariable>
    <StateVariable name="unsuccessfulIntercepts" type="int">
        <Comment>DATA: Total number of successful intercepts</Comment>
    </StateVariable>
    <StateVariable name="speed" type="double">
        <Comment>DATA: Average Speed of this entity</Comment>
    </StateVariable>
    <StateVariable name="contactIDs" type="int">
        <Comment>DATA: Total number of contacts ID'd</Comment>
    </StateVariable>
    <StateVariable name="canIntercept" type="boolean">
        <Comment>Whether or not entity can catch up to contact</Comment>
    </StateVariable>
    <StateVariable name="missedIDs" type="int">
        <Comment>DATA: Total number of missed IDs due to distance</Comment>
    </StateVariable>
    <StateVariable name="distanceFromMissedAttacker" type="double">
        <Comment>DATA: Distance from attacker at time of successful attack</Comment>
    </StateVariable>
    <StateVariable name="destination" type="diskit.Vec3d">
        <Comment>This entities current destination</Comment>
    </StateVariable>
    <Event name="Run">
        <Comment>Initializes all state variables for each simulation run.</Comment>
        <StateTransition state="visualRange">
            <Assignment value="600"/>
        </StateTransition>
        <StateTransition state="avoidanceRange">
            <Assignment value="30"/>
        </StateTransition>
        <StateTransition state="successfulIntercepts">
            <Assignment value="0"/>
        </StateTransition>
        <StateTransition state="unsuccessfulIntercepts">
            <Assignment value="0"/>
        </StateTransition>
        <StateTransition state="speed">
            <Assignment value="0.0"/>
        </StateTransition>
        <StateTransition state="contactIDs">
            <Assignment value="0"/>
        </StateTransition>
        <StateTransition state="canIntercept">
            <Assignment value="false"/>
        </StateTransition>
        <StateTransition state="missedIDs">
            <Assignment value="0"/>
        </StateTransition>
        <StateTransition state="distanceFromMissedAttacker">
            <Assignment value="0"/>
        </StateTransition>
        <Code/>
        <Coordinate x="30" y="30"/>
    </Event>
    <Event name="Init">
        <Comment>Used by diskit.ScenarioManager to register all entities</Comment>
        <Argument name="entity" type="simkit.SimEntity">
            <Comment>Entity being initialized</Comment>
        </Argument>
        <StateTransition state="visualPerception">
            <Assignment value="new diskit.SphereCutterSensor(this, visualRange)"/>
        </StateTransition>
        <Schedule condition="entity == this" delay="0.0" event="RegisterTarget" priority="0">
            <Comment/>
            <EdgeParameter value="this"/>
        </Schedule>
        <Schedule condition="true" delay="0.0" event="RegisterSensor" priority="0">
            <Comment/>
            <EdgeParameter value="visualPerception"/>
        </Schedule>
        <Code/>
        <Coordinate x="240" y="20"/>
    </Event>
    <Event name="RegisterTarget">
        <Comment>Registers this mover with the simulation</Comment>
        <Argument name="m" type="diskit.Mover3D">
            <Comment>This mover being registered</Comment>
        </Argument>
        <Code/>
        <Coordinate x="320" y="110"/>
    </Event>
    <Event name="RegisterSensor">
        <Comment>Registers this entity's sensor with the simulation. Also registers a SimEventListener between this mover and its sensor</Comment>
        <Argument name="s" type="diskit.Sensor">
            <Comment>This entities Sensor</Comment>
        </Argument>
        <StateTransition state="visualPerception">
            <Operation method="addSimEventListener(this)"/>
        </StateTransition>
        <Code/>
        <Coordinate x="150" y="110"/>
    </Event>
    <Event name="CreateZones">
        <Comment>Listens to diskit.SceneZoneCreator to get Patrol Zone responsibilities</Comment>
        <Argument name="zones" type="diskit.ZoneGeometry[]">
            <Comment>Zones for this simulation</Comment>
        </Argument>
        <LocalVariable name="zoneReader" type="diskit.ZoneReader" value="new diskit.ZoneReader(moverID, zones)">
            <Comment>Reads Zones for only those that are for this entity</Comment>
        </LocalVariable>
        <LocalVariable name="myPatrol" type="diskit.ZoneGeometry[]" value="zoneReader.getMyPatrol()">
            <Comment>Returns this entities patrol zones</Comment>
        </LocalVariable>
        <StateTransition state="waypointGenerator">
            <Assignment value="new diskit.WaypointCreator(myPatrol)"/>
        </StateTransition>
        <StateTransition state="patrolManager">
            <Assignment value="new diskit.ZoneMoverManager(this, waypointGenerator, avoidanceRange)"/>
        </StateTransition>
        <Schedule event="Patrol"/>
        <Code/>
        <Coordinate x="240" y="110"/>
    </Event>
    <Event name="Patrol">
        <Comment>Patrolling behavior for this entity. Speed is random and always less than the max speed</Comment>
        <LocalVariable name="rn" type="java.util.Random" value="new Random()">
            <Comment>Pseudorandom number generator for fluxuating speeds and times between patrol movements</Comment>
        </LocalVariable>
        <LocalVariable name="currentSpeed" type="double" value="maxSpeed * rn.nextDouble()">
            <Comment>creates a crusing speed between zero and the max speed of this craft</Comment>
        </LocalVariable>
        <LocalVariable name="waypoint" type="diskit.Vec3d" value="waypointGenerator.createWaypoint()">
            <Comment>Provides a waypoint within the geometry specified</Comment>
        </LocalVariable>
        <StateTransition state="speed">
            <Assignment value="currentSpeed"/>
        </StateTransition>
        <StateTransition state="tacticalMode">
            <Assignment value="diskit.TacticalMode.PATROLLING"/>
        </StateTransition>
        <Code>setCruisingSpeed(currentSpeed);setDestination(waypoint);
System.out.println("doPatrol Event:");
System.out.println("Heading to: " + waypoint);</Code>
        <Coordinate x="240" y="230"/>
    </Event>
</SimEntity>

