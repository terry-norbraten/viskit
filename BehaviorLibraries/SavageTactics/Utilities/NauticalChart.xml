<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<SimEntity author="pjsulliv" extend="SimEntityBase" name="NauticalChart" package="diskitXML" version="1.0" xsi:noNamespaceSchemaLocation="http://diana.gl.nps.navy.mil/Simkit/simkit.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Comment>This object is used to collect and transmit all information that one could derive from a Nautical Chart.  Accordingly, this graph includes adapter functionality (e.g. RegisterTargetByAdapter) to allow relay objects to register through the chart.

The primary component of the chart is an array of diskit.AStarZoneGeometry which define the navigatable zones of the water space. 

Additionally, buoys, perimeter zones, piers, etc, should all pass through this class to allow other event graphs the opportunity to extract the information they need from the chart.</Comment>
    <Parameter name="navigatableWaterZones" type="diskit.AStarZoneGeometry[]">
        <Comment>The collection of zones that represent general areas of navigatable water</Comment>
    </Parameter>
    <StateVariable name="harborMap" type="diskit.AStarZoneMap">
        <Comment>The diskit.AStarZoneMap created using the specified zones</Comment>
    </StateVariable>
    <StateVariable name="registeredTargets" type="java.util.LinkedList">
        <Comment>Movers that have been registered through this object in a Relay/Adapter fashion</Comment>
    </StateVariable>
    <StateVariable name="registeredSensor" type="java.util.LinkedList">
        <Comment>Single sensors that have been registered through this object</Comment>
    </StateVariable>
    <StateVariable name="registeredSensors" type="java.util.LinkedList">
        <Comment>Sensor arrays that have been registered through this object</Comment>
    </StateVariable>
    <Event name="Run">
        <Schedule event="CreateHarborMap"/>
        <Code/>
        <Coordinate x="10" y="300"/>
    </Event>
    <Event name="CreateHarborMap">
        <Comment>Creates a new instance of diskit.AStarZoneMap with the zones that were passed to the constructor</Comment>
        <StateTransition state="harborMap">
            <Assignment value="new diskit.AStarZoneMap(navigatableWaterZones)"/>
        </StateTransition>
        <Code>System.out.println("CreateHarborMap called");</Code>
        <Coordinate x="210" y="300"/>
    </Event>
    <Event name="RegisterTarget">
        <Comment>Passes target to an adapter</Comment>
        <Argument name="target" type="diskit.Mover3D">
            <Comment>The target to Adapter to the adapter</Comment>
        </Argument>
        <Schedule condition="!registeredTargets.contains(target)" delay="0.0" event="ProcessTarget" priority="0">
            <Comment/>
            <EdgeParameter value="target"/>
        </Schedule>
        <Code/>
        <Coordinate x="20" y="10"/>
    </Event>
    <Event name="RegisterSensor">
        <Comment>Passes target to an adapter</Comment>
        <Argument name="sensor" type="diskit.Sensor">
            <Comment>The sensor to pass to the adapter</Comment>
        </Argument>
        <Schedule condition="!registeredSensor.contains(sensor)  " delay="0.0" event="ProcessSensor" priority="0">
            <Comment/>
            <EdgeParameter value="sensor"/>
        </Schedule>
        <Code/>
        <Coordinate x="20" y="80"/>
    </Event>
    <Event name="RegisterSensors">
        <Comment/>
        <Argument name="sensors" type="diskit.Sensor[]"/>
        <Schedule condition="!registeredSensors.contains(sensors)" delay="0.0" event="ProcessSensors" priority="0">
            <Comment/>
            <EdgeParameter value="sensors"/>
        </Schedule>
        <Code/>
        <Coordinate x="20" y="150"/>
    </Event>
    <Event name="ProcessTarget">
        <Comment>Handles registration of entities in a relay fashion</Comment>
        <Argument name="target" type="diskit.Mover3D">
            <Comment>mover to be registered</Comment>
        </Argument>
        <StateTransition state="registeredTargets">
            <Operation method="add(target)"/>
        </StateTransition>
        <Schedule condition="true" delay="0.0" event="RegisterTarget" priority="0">
            <Comment/>
            <EdgeParameter value="target"/>
        </Schedule>
        <Code/>
        <Coordinate x="170" y="10"/>
    </Event>
    <Event name="ProcessSensor">
        <Comment>Registers the passed sensor as a relay</Comment>
        <Argument name="sensor" type="diskit.Sensor">
            <Comment>Sensor to be registered</Comment>
        </Argument>
        <StateTransition state="registeredSensor">
            <Operation method="add(sensor)"/>
        </StateTransition>
        <Schedule condition="true" delay="0.0" event="RegisterSensor" priority="0">
            <Comment/>
            <EdgeParameter value="sensor"/>
        </Schedule>
        <Code/>
        <Coordinate x="170" y="80"/>
    </Event>
    <Event name="ProcessSensors">
        <Comment>Registers sensor arrays with scenario manager as a relay</Comment>
        <Argument name="sensors" type="diskit.Sensor[]">
            <Comment>Array of sensors to be registered</Comment>
        </Argument>
        <StateTransition state="registeredSensors">
            <Operation method="add(sensors)"/>
        </StateTransition>
        <Schedule condition="true" delay="0.0" event="RegisterSensors" priority="0">
            <Comment/>
            <EdgeParameter value="sensors"/>
        </Schedule>
        <Code/>
        <Coordinate x="170" y="150"/>
    </Event>
</SimEntity>

