<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<SimEntity author="pjsulliv" extend="diskit.HostileForce" name="Terrorist" package="diskit" version="1.0" xsi:noNamespaceSchemaLocation="http://diana.gl.nps.navy.mil/Simkit/simkit.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Comment>Terrorist that starts from a point randomly within ZoneGeometry objects.  Terrorist will proceed towards the harbor, scans the area for potential targets and attacks the targets in order of proximity and order in which detected.

TODO: Add booleans to the constructor for attack Friendly, attack HVU</Comment>
    <Parameter name="startPosition" type="diskit.Vec3d">
        <Comment>Start position for this entity</Comment>
    </Parameter>
    <Parameter name="maxSpeed" type="double">
        <Comment/>
    </Parameter>
    <Parameter name="moverID" type="int">
        <Comment>Unique DIS entity ID number</Comment>
    </Parameter>
    <Parameter name="entityType" type="diskit.EntityType">
        <Comment>Should match interface</Comment>
    </Parameter>
    <Parameter name="entityName" type="java.lang.String">
        <Comment>Should match name in Assembly</Comment>
    </Parameter>
    <Parameter name="blastRadius" type="double">
        <Comment>proximity to a target required to effectively destroy it</Comment>
    </Parameter>
    <Parameter name="harborLocation" type="diskit.ZoneGeometry[]">
        <Comment>General area where the harbor is located</Comment>
    </Parameter>
    <StateVariable name="avoidanceRange" type="double">
        <Comment/>
    </StateVariable>
    <StateVariable name="visualPerception" type="diskit.Sensor">
        <Comment>Sensor object that processes all targets in the state space before attacking</Comment>
    </StateVariable>
    <StateVariable name="interceptMoverManager" type="diskit.InterceptMoverManager">
        <Comment/>
    </StateVariable>
    <StateVariable name="attackCreator" type="diskit.WaypointCreator">
        <Comment/>
    </StateVariable>
    <StateVariable name="targetQueue" type="java.util.LinkedList">
        <Comment/>
    </StateVariable>
    <StateVariable name="activeMoverManager" type="diskit.MoverManager">
        <Comment/>
    </StateVariable>
    <StateVariable name="collisionAvoidance" type="diskit.Sensor">
        <Comment>Sensor that implements collision avoidance</Comment>
    </StateVariable>
    <StateVariable name="lethalRange" type="diskit.Sensor">
        <Comment>Range at which this terrorist can be lethal (assumes suicide bombing as attack)</Comment>
    </StateVariable>
    <StateVariable name="initialMoverManager" type="diskit.PathMoverManager">
        <Comment/>
    </StateVariable>
    <StateVariable name="successfulStartPosition" type="diskit.Vec3d">
        <Comment>TODO: add property stat</Comment>
    </StateVariable>
    <StateVariable name="unsuccessfulStartPosit" type="diskit.Vec3d">
        <Comment>TODO: add property stat</Comment>
    </StateVariable>
    <StateVariable name="successfullAttack" type="int">
        <Comment>TODO: add as property stat</Comment>
    </StateVariable>
    <StateVariable name="unsuccessfulAttack" type="int">
        <Comment>TODO: add as property stat</Comment>
    </StateVariable>
    <StateVariable name="lengthOfAttack" type="double">
        <Comment>TODO: add as property stat</Comment>
    </StateVariable>
    <StateVariable name="obstacleQueue" type="diskit.ObstacleQueue">
        <Comment/>
    </StateVariable>
    <StateVariable name="tacticalMode" type="diskit.TacticalMode">
        <Comment/>
    </StateVariable>
    <StateVariable name="calc" type="diskit.util.MovementCalculator">
        <Comment/>
    </StateVariable>
    <StateVariable name="harborDirector" type="diskit.WaypointCreator">
        <Comment/>
    </StateVariable>
    <StateVariable name="amm" type="diskit.AvoidanceMoverManager">
        <Comment/>
    </StateVariable>
    <StateVariable name="detonateProximity" type="diskit.Sensor">
        <Comment>Sensor that determines if the contact is close enough to kill</Comment>
    </StateVariable>
    <StateVariable name="visualRange" type="double">
        <Comment>Visual range for this entity</Comment>
    </StateVariable>
    <StateVariable name="entitySensors" type="diskit.Sensor[0]">
        <Comment/>
    </StateVariable>
    <StateVariable name="plasticExplosives" type="diskit.Explosive">
        <Comment>Explosives that this entity is carrying</Comment>
    </StateVariable>
    <Event name="Run">
        <Comment/>
        <StateTransition state="avoidanceRange">
            <Assignment value="30"/>
        </StateTransition>
        <StateTransition state="interceptMoverManager">
            <Assignment value="null"/>
        </StateTransition>
        <StateTransition state="activeMoverManager">
            <Assignment value="null"/>
        </StateTransition>
        <StateTransition state="targetQueue">
            <Operation method="clear()"/>
        </StateTransition>
        <StateTransition state="tacticalMode">
            <Assignment value="diskit.TacticalMode.TRANSITING"/>
        </StateTransition>
        <StateTransition state="visualRange">
            <Assignment value="600"/>
        </StateTransition>
        <Code/>
        <Coordinate x="30" y="70"/>
    </Event>
    <Event name="Init">
        <Comment/>
        <Argument name="entity" type="diskit.Mover3D"/>
        <LocalVariable name="numOfSensors" type="int" value="2">
            <Comment>Number of Sensors this entity has</Comment>
        </LocalVariable>
        <LocalVariable name="sensors" type="diskit.Sensor[]" value="new diskit.Sensor[numOfSensors]">
            <Comment/>
        </LocalVariable>
        <StateTransition state="calc">
            <Assignment value="new diskit.util.MovementCalculator(this)"/>
        </StateTransition>
        <StateTransition state="visualPerception">
            <Assignment value="new diskit.SphereCutterSensor(this, visualRange)"/>
        </StateTransition>
        <StateTransition state="detonateProximity">
            <Assignment value="new diskit.SphereCutterSensor(this, blastRadius)"/>
        </StateTransition>
        <Schedule condition="true" delay="0.0" event="RegisterTarget" priority="0">
            <Comment/>
            <EdgeParameter value="this"/>
        </Schedule>
        <Schedule condition="entity == this" delay="0.0" event="CreateSensors" priority="0">
            <Comment/>
        </Schedule>
        <Schedule event="CreateExplosive"/>
        <Code>//TODO: Elegant construction of sensors array
sensors[0] = visualPerception;
sensors[1] = detonateProximity;
//Schedule.stopOnEvent("Stop");</Code>
        <Coordinate x="120" y="70"/>
    </Event>
    <Event name="RegisterTarget">
        <Comment/>
        <Argument name="target" type="diskit.Mover3D"/>
        <Code/>
        <Coordinate x="220" y="70"/>
    </Event>
    <Event name="Detection">
        <Comment/>
        <Argument name="sensor" type="diskit.Sensor"/>
        <Argument name="contact" type="diskit.Mover3D"/>
        <Schedule condition="contact.getMoverID() &gt; 399 &amp;&amp; contact.getMoverID() &lt; 500 &amp;&amp; tacticalMode != diskit.TacticalMode.ATTACKING  &amp;&amp; calc.canIntercept(contact, blastRadius) " delay="0.0" event="Attack" priority="0">
            <Comment/>
            <EdgeParameter value="contact"/>
            <EdgeParameter value="sensor"/>
        </Schedule>
        <Schedule condition="contact.getMoverID() &gt; 100 &amp;&amp; contact.getMoverID() &lt; 102" delay="0.0" event="AssessAttackPlan" priority="0">
            <Comment/>
            <EdgeParameter value="contact"/>
        </Schedule>
        <Schedule condition="sensor == detonateProximity &amp;&amp; !hostileForces.contains(contact.getMoverID())" delay="0.0" event="Fire" priority="0">
            <Comment/>
            <EdgeParameter value="this"/>
            <EdgeParameter value="plasticExplosives"/>
            <EdgeParameter value="this"/>
        </Schedule>
        <Code/>
        <Coordinate x="450" y="320"/>
    </Event>
    <Event name="BeginAttack">
        <Comment>TODO: Move Harbor Center to the constructor for this event graph</Comment>
        <LocalVariable name="startLocation" type="diskit.Vec3d" value="attackCreator.createWaypoint()">
            <Comment/>
        </LocalVariable>
        <LocalVariable name="startHeading" type="diskit.Vec3d[]" value="new diskit.Vec3d[1]">
            <Comment/>
        </LocalVariable>
        <StateTransition state="initialMoverManager">
            <Assignment value="new diskit.PathMoverManager(this, startHeading, true)"/>
        </StateTransition>
        <Schedule event="Start"/>
        <Code>setStartPosition(startLocation); 
startHeading[0] = harborDirector.createWaypoint();</Code>
        <Coordinate x="30" y="320"/>
    </Event>
    <Event name="Start">
        <Comment/>
        <LocalVariable name="movement" type="boolean" value="true">
            <Comment/>
        </LocalVariable>
        <LocalVariable name="harborCenter" type="diskit.Vec3d" value="new diskit.Vec3d(-1147.185, -975.658, 0.0)">
            <Comment/>
        </LocalVariable>
        <Code>setCruisingSpeed(getMaxSpeed()/2); </Code>
        <Coordinate x="30" y="430"/>
    </Event>
    <Event name="RegisterSensors">
        <Comment>Registers Sensors for this entity, and adds simEventListenerConnections</Comment>
        <Argument name="sensors[]" type="diskit.Sensor[]">
            <Comment>Sensors for this entity</Comment>
        </Argument>
        <StateTransition state="visualPerception">
            <Operation method="addSimEventListener(this)"/>
        </StateTransition>
        <StateTransition state="detonateProximity">
            <Operation method="addSimEventListener(this)"/>
        </StateTransition>
        <Code/>
        <Coordinate x="220" y="150"/>
    </Event>
    <Event name="Attack">
        <Comment/>
        <Argument name="target" type="diskit.Mover3D"/>
        <Argument name="sensor" type="diskit.Sensor"/>
        <LocalVariable name="attackGoal" type="diskit.Vec3d" value="calc.getInterceptPoint()">
            <Comment/>
        </LocalVariable>
        <LocalVariable name="timeTillDetonate" type="double" value="calc.getInterceptTime()">
            <Comment/>
        </LocalVariable>
        <StateTransition state="tacticalMode">
            <Assignment value="diskit.TacticalMode.ATTACKING"/>
        </StateTransition>
        <Schedule condition="true" delay="timeTillDetonate" event="Fire" priority="0">
            <Comment/>
            <EdgeParameter value="this"/>
            <EdgeParameter value="target"/>
            <EdgeParameter value="this"/>
        </Schedule>
        <Code>setStartPosition(getLocation());setDestination(attackGoal);
this.setCruisingSpeed(getMaxSpeed());</Code>
        <Coordinate x="300" y="200"/>
    </Event>
    <Event name="CreateZones">
        <Comment/>
        <Argument name="startZones" type="diskit.ZoneGeometry[]">
            <Comment>Possible starting locations, only restriction should be physical limitations of attack craft</Comment>
        </Argument>
        <LocalVariable name="zoneReader" type="diskit.ZoneReader" value="new diskit.ZoneReader(moverID, startZones)">
            <Comment/>
        </LocalVariable>
        <LocalVariable name="startPositions" type="diskit.ZoneGeometry[]" value="zoneReader.getMyPatrol()">
            <Comment>Starting position zones assigned to this entity</Comment>
        </LocalVariable>
        <StateTransition state="attackCreator">
            <Assignment value="new diskit.WaypointCreator(startPositions)"/>
        </StateTransition>
        <StateTransition state="harborDirector">
            <Assignment value="new diskit.WaypointCreator(harborLocation)"/>
        </StateTransition>
        <Schedule event="BeginAttack"/>
        <Code/>
        <Coordinate x="30" y="150"/>
    </Event>
    <Event name="Fire">
        <Comment/>
        <Argument name="shooter" type="diskit.Mover3D"/>
        <Argument name="explosives" type="diskit.Munition">
            <Comment>Our explosives to detonate</Comment>
        </Argument>
        <Argument name="target" type="diskit.Mover3D">
            <Comment>Suicide so target is yourself</Comment>
        </Argument>
        <Schedule condition="true" delay="3" event="Stop" priority="0">
            <Comment/>
        </Schedule>
        <Schedule condition="true" delay="0.0" event="Detonate" priority="0">
            <Comment/>
            <EdgeParameter value="this"/>
            <EdgeParameter value="plasticExplosives"/>
        </Schedule>
        <Code>System.out.println(moverID + " Going after: " + target.getMoverID());</Code>
        <Coordinate x="300" y="420"/>
    </Event>
    <Event name="Evade">
        <Comment>TODO: Add evading to tactical mode</Comment>
        <Argument name="threat" type="diskit.Mover3D"/>
        <Argument name="evadingEntity" type="diskit.Mover3D">
            <Comment>Registers which entity is evading</Comment>
        </Argument>
        <LocalVariable name="evadePoint" type="diskit.Vec3d" value="calc.getCollisionAvoidance(threat)">
            <Comment/>
        </LocalVariable>
        <LocalVariable name="harborCenter" type="diskit.Vec3d" value="new diskit.Vec3d(-1147.185, -975.658, 0.0)">
            <Comment/>
        </LocalVariable>
        <StateTransition state="amm">
            <Assignment value="new diskit.AvoidanceMoverManager(this)"/>
        </StateTransition>
        <StateTransition state="amm">
            <Operation method="avoidToOffset(evadePoint, initialMoverManager)"/>
        </StateTransition>
        <StateTransition state="tacticalMode">
            <Assignment value="diskit.TacticalMode.TRANSITING"/>
        </StateTransition>
        <Schedule event="Attack"/>
        <Code>threat.addSimEventListener(this);
setStartPosition(getLocation());
setDestination(harborCenter);
setCruisingSpeed(getMaxSpeed());
System.out.println(moverID + " is evading");</Code>
        <Coordinate x="100" y="320"/>
    </Event>
    <Event name="AssessAttackPlan">
        <Comment/>
        <Argument name="threat" type="diskit.Mover3D"/>
        <StateTransition state="calc">
            <Operation method="checkCollision(threat, visualPerception, avoidanceRange)"/>
        </StateTransition>
        <Schedule condition="calc.willCollide() &amp;&amp; threat.getMoverID() == 101" delay="0.0" event="Evade" priority="0">
            <Comment/>
            <EdgeParameter value="threat"/>
            <EdgeParameter value="this"/>
        </Schedule>
        <Cancel condition="calc.willCollide() &amp;&amp; threat.getMoverID() == 101" event="Fire">
            <Comment/>
            <EdgeParameter value="this"/>
            <EdgeParameter value="plasticExplosives"/>
            <EdgeParameter value="this"/>
        </Cancel>
        <Code>System.out.println("Terrorist Assessing Attack Plan");</Code>
        <Coordinate x="210" y="320"/>
    </Event>
    <Event name="PursueHostile">
        <Comment/>
        <Argument name="beingPursued" type="diskit.Mover3D">
            <Comment>contact being pursued</Comment>
        </Argument>
        <Argument name="pursuer" type="diskit.Mover3D">
            <Comment>entity that is pursuing</Comment>
        </Argument>
        <Schedule condition="beingPursued == this" delay="0.0" event="AssessAttackPlan" priority="0">
            <Comment/>
            <EdgeParameter value="pursuer"/>
        </Schedule>
        <Code/>
        <Coordinate x="210" y="420"/>
    </Event>
    <Event name="CreateSensors">
        <Comment>Builds array of all sensors to be registered</Comment>
        <LocalVariable name="numOfSensors" type="int" value="2">
            <Comment>Number of Sensors for this entity</Comment>
        </LocalVariable>
        <LocalVariable name="sensors" type="diskit.Sensor[]" value="new diskit.Sensor[numOfSensors]">
            <Comment>Array to add all sensors</Comment>
        </LocalVariable>
        <Schedule condition="true" delay="0.0" event="RegisterSensors" priority="0">
            <Comment/>
            <EdgeParameter value="sensors"/>
        </Schedule>
        <Code>sensors[0] = visualPerception;
sensors[1] = detonateProximity;</Code>
        <Coordinate x="120" y="150"/>
    </Event>
    <Event name="Stop">
        <Comment/>
        <Code>System.out.println("doStop called in Terrorist");
Schedule.stopSimulation();</Code>
        <Coordinate x="300" y="550"/>
    </Event>
    <Event name="CreateExplosive">
        <Comment>Creates the explosive for this entity</Comment>
        <StateTransition state="plasticExplosives">
            <Assignment value="new diskit.Explosive(getLocation(), maxSpeed, getMoverID(), diskit.EntityType.HOSTILEFORCE, &quot;Plastic Explosives&quot;, blastRadius)"/>
        </StateTransition>
        <Schedule condition="true" delay="0.0" event="RegisterMunition" priority="0">
            <Comment/>
            <EdgeParameter value="plasticExplosives"/>
        </Schedule>
        <Code/>
        <Coordinate x="120" y="0"/>
    </Event>
    <Event name="RegisterMunition">
        <Comment>Register the explosive with scenario Manager</Comment>
        <Argument name="munition" type="diskit.Munition">
            <Comment>The explosives just created</Comment>
        </Argument>
        <StateTransition state="plasticExplosives">
            <Operation method="addSimEventListener(this)"/>
        </StateTransition>
        <Code>this.addSimEventListener(munition);</Code>
        <Coordinate x="220" y="0"/>
    </Event>
    <Event name="Detonate">
        <Comment/>
        <Argument name="shooter" type="diskit.Mover3D"/>
        <Argument name="munition" type="diskit.Munition"/>
        <Code>System.out.println("Terrorist doDetonate event");</Code>
        <Coordinate x="410" y="480"/>
    </Event>
</SimEntity>

